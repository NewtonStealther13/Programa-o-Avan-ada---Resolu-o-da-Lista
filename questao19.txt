Pesquise na Internet sobre o uso da biblioteca libGC, que
implementa um coletor de lixo em C. O processo de instalação
dessa biblioteca em sistemas Windows pode ser um pouco
trabalhoso. Entretanto, em sistemas Unix, a instalação é bem
simples, de sorte que se recomenda a resolução desta questão em
uma máquina, por exemplo, com Linux instalado. Caso seja
usuário Windows e não queira instalar sistemas alternativos em
seu computador, use uma ferramenta de virtualização (ex:
VirtualBox) para instalar e executar o Linux sem alterar a
instalação original de seu computador. Prepare um pequeno
programa-exemplo demonstrando como usar a biblioteca.

Programa-Exemplo:
---------------------------------------------------------------------------------------------------
#include "gc.h"
#include <assert.h>
#include <stdio.h>
int main(void)
{
int i;
const int size = 10000000;
GC_INIT();
for (i = 0; i < size; ++i)
{
int **p = GC_MALLOC(sizeof *p);
int *q = GC_MALLOC_ATOMIC(sizeof *q);
assert(*p == 0);
*p = GC_REALLOC(q, 2 * sizeof *p);
if (i == size-1){
printf("Heap size = %zu\n", GC_get_heap_size());
}
}
return 0;
}
---------------------------------------------------------------------------------------------------
O coletor de lixo (GC) funciona com a maioria dos programas C
não modificados, simplesmente substituindo as chamadas malloc
() por GC_MALLOC () , substituindo as chamadas realloc () por
GC_REALLOC () e removendo as chamadas free () , uma vezque o processo de liberação de memória acontece de forma
automática com o uso do Garbage Collector